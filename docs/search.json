[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "YELLOW SUBMARINE Progress Journal",
    "section": "",
    "text": "Introduction\n\n\nThis progress journal covers YELLOW SUBMARINE’s work during their term at BDA 503 Fall 2023.\nEach section is an assignment or an individual work.\n\n\n\nGroup Members\n\nSezer Türkmen\n\nSezgi Ayhan\n\n\n\nGroup Project Details\nOur group project is [PROJECT NAME]. [SHORT DESCRIPTION]"
  },
  {
    "objectID": "assignment1.html#group-assignment-for-global-dietary-database",
    "href": "assignment1.html#group-assignment-for-global-dietary-database",
    "title": "1  Assignment 1",
    "section": "1.1 Group Assignment For Global Dietary Database",
    "text": "1.1 Group Assignment For Global Dietary Database\nIn this analysis, we delve into the Global Dietary Database to scrutinize Vitamin B12 intake among Former Soviet Union countries. Employing the analytical prowess of ‘dplyr’ and ‘ggplot2’ in R, our aim is to uncover patterns and variations, offering a data-driven perspective on nutritional habits within this geopolitical region.\nGlobal Dietary Database\nDataset\n\n\n# Soviet Union data cleaned up and inserted average column by calculating the mean\nsoviet_union_abbreviations &lt;- c(\"ARM\", \"AZE\", \"BLR\", \"EST\", \"GEO\", \"KAZ\", \"KGZ\", \"LVA\", \"LTU\", \"MDA\", \"RUS\", \"TJK\", \"TKM\", \"UKR\", \"UZB\")\n\nsoviet_union_data &lt;- data %&gt;%\n  filter(country %in% soviet_union_abbreviations)\n\n\n# Full country names\ncountry_names &lt;- c(\n  \"Armenia\", \"Azerbaijan\", \"Belarus\", \"Estonia\", \"Georgia\", \"Kazakhstan\", \"Kyrgyzstan\", \"Latvia\", \"Lithuania\", \"Moldova\",\n  \"Russia\", \"Tajikistan\", \"Turkmenistan\", \"Ukraine\", \"Uzbekistan\"\n)\n\n# Replace country abbreviations with full names\nsoviet_union_data$country &lt;- factor(soviet_union_data$country, levels = soviet_union_abbreviations, labels = country_names)\n\n\n\n1.1.1 B12 Intakes Total Averages by Country\nThe following plot displays the total averages of B12 intakes for each country in the Former Soviet Union. The bars represent the mean B12 intake, providing an overview of the variations across the different countries.\n\n# Group by Country\ngroup_by_country_data &lt;- soviet_union_data %&gt;%\n  group_by(country) %&gt;%\n  summarise(avg_b12 = mean(average, na.rm = TRUE))\n\n# Plotting the data with geom_bar\nggplot(group_by_country_data, aes(x = country, y = avg_b12, fill = country)) +\n  geom_bar(stat = \"identity\", position = position_dodge(width = 0.8), alpha = 0.7) +\n  labs(title = \"B12 Intakes Total Averages by Country\",\n       x = \"Country\",\n       y = \"B12 intakes Total Average\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  scale_fill_viridis_d()  + \n  # Increase bar width\n  theme(legend.position = \"none\") +\n  geom_text(aes(label = round(avg_b12, 2)), vjust = -0.5, position = position_dodge(width = 0.8)) \n\n\n\n\n\n\n\n1.1.2 B12 Intakes Total Averages by Country and Gender\nThe following plot further breaks down the B12 intakes by gender within each country. The stacked bars show the mean B12 intake for both male and female individuals, providing insights into gender-specific patterns across the Former Soviet Union. ::: {.cell}\n# Group by Country and Gender\ngroup_by_country_gender_data &lt;- soviet_union_data %&gt;% filter(gender!='NA')%&gt;%\n  group_by(country, gender) %&gt;%\n  summarise(avg_b12 = mean(average, na.rm = TRUE), .groups = 'drop')\n\n# Plotting the data with geom_bar (stacked)\nggplot(group_by_country_gender_data, aes(x = country, y = avg_b12, fill = factor(gender))) +\n  geom_bar(stat = \"identity\", position = \"stack\", alpha = 0.7) +\n  labs(title = \"B12 Intakes Total Averages by Country and Gender\",\n       x = \"Country\",\n       y = \"B12 Intakes Total Average\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  scale_fill_viridis_d(name = \"Gender\", labels = c(\"Male\", \"Female\")) +\n  # Increase bar width\n  theme(legend.position = \"top\") +\n  geom_text(aes(label = round(avg_b12, 2)), position = position_stack(vjust = 0.5))\n\n\n\n:::\n\n\n\n1.1.3 B12 Intakes Total Averages by Country and Year\nThis plot unveils the nuanced trends in mean B12 intake across years for Former Soviet Union countries. Stacked bars represent the average B12 intake, providing insights into variations over time within each country.\n\n# Group by Year and Country\ngroup_by_country_year_data &lt;- soviet_union_data %&gt;% filter(gender!='NA')%&gt;%\n  group_by(year, country) %&gt;%\n  summarise(avg_b12 = mean(average, na.rm = TRUE), .groups = 'drop')\n\n# Plotting the data\nggplot(group_by_country_year_data, aes(x = year, y = avg_b12, color = country,alpha = 0.7)) +\n  geom_line(linewidth = 1) +\n  labs(title = \"Average B12 intake by Year and Country\",\n       x = \"Year\",\n       y = \"Average B12 intake\") \n\n\n\n\n\n\n\n1.1.4 Dynamic Insights: Age-Stratified Trends in B12 Intake Across Former Soviet Union Nations\nExploring age group dynamics in B12 intake across Former Soviet Union nations, this plot employs stacked bars to illustrate average intake trends over time. The concise representation unveils nuanced patterns, providing insight into the evolving nutritional habits within each country and highlighting age-specific variations in B12 consumption.\n\nraw_df &lt;- read.csv(url)\n#Change column names & column data\nraw_data &lt;- select(raw_df,country = iso3, age:upperci_95)\n\nsoviet_data &lt;- filter(raw_data, country %in% c(\"ARM\", \"AZE\", \"BLR\", \"EST\", \"GEO\", \"KAZ\", \"KGZ\", \"LVA\", \"LTU\", \"MDA\", \"RUS\", \"TJK\", \"TKM\", \"UKR\", \"UZB\"))\n\ncountry_mapping &lt;- c(\"ARM\"=\"Armenia\", \"AZE\"=\"Azerbaijan\", \"BLR\"=\"Belarus\", \"EST\"=\"Estonia\", \"GEO\"=\"Georgia\", \"KAZ\"=\"Kazakhstan\", \"KGZ\"=\"Kyrgyzstan\", \"LVA\"=\"Latvia\", \"LTU\"=\"Lithuania\", \"MDA\"=\"Moldova\", \"RUS\"=\"Russia\", \"TJK\"=\"Tajikistan\", \"TKM\"=\"Turkmenistan\", \"UKR\"=\"Ukraine\", \"UZB\"=\"Uzbekistan\") \n\nsoviet_data$country_full_name &lt;- country_mapping[soviet_data$country]\n\nsoviet_data[soviet_data == 999] &lt;- \"All\"\n\nsoviet_data &lt;- soviet_data %&gt;%\n\n#Calculate mean\nmutate(average_calculation = median + ((upperci_95 - lowerci_95) / 2))\n\n#Analyze according to age_range\nage_range &lt;- filter(soviet_data, age %in% c(0.5, 1.5, 2.5, 7.5, 12.5, 17.5, 22.5, 27.5, 32.5, 37.5, 42.5, 47.5, 52.5, 57.5, 62.5, 67.5, 72.5, 77.5, 82.5, 87.5, 92.5, 97.5,\"All\" ))\n\nage_mapping &lt;- (c(\"0.5\" = \"Child\", \"1.5\" = \"Child\", \"2.5\" = \"Child\",\"7.5\" = \"Child\", \"12.5\" = \"Adolescent\", \"17.5 \"= \"Adolescent\", \"22.5\" = \"Adult\", \"27.5\" = \"Adult\", \"32.5\" = \"Adult\", \"37.5\" = \"Adult\", \"42.5\" = \"Adult\",\"47\" = \"Adult\", \"47.5 \"= \"Adult\", \"52.5\" = \"Adult\", \"57.5\" = \"Adult\", \"62.5\" = \"Elderly\",\"67.5\" = \"Elderly\", \"72.5\" = \"Elderly\", \"77.5 \"= \"Elderly\", \"82.5\" = \"Elderly\", \"87.5\" = \"Elderly\", \"92.5\" = \"Elderly\",\"97.5\" = \"Elderly\", \"All\" = \"Undefined\"))\n\nsoviet_data$age_range &lt;- age_mapping[soviet_data$age]\n\n# Group by Age\ngroup_by_age_data &lt;- soviet_data %&gt;%\n  group_by(age_range) %&gt;%\n  summarise(avg_b12 = mean(average_calculation, na.rm = TRUE), .groups = 'drop')\n  na_columns&lt;- which(is.na(group_by_age_data$age_range))\n  group_by_age_data  %&gt;% glimpse()\n\nRows: 6\nColumns: 2\n$ age_range &lt;chr&gt; \"Adolescent\", \"Adult\", \"Child\", \"Elderly\", \"Undefined\", NA\n$ avg_b12   &lt;dbl&gt; 6.798432, 7.007763, 4.648042, 6.366478, 5.683773, 6.402601\n\n# Plotting Histogram\nggplot(group_by_age_data, aes(x = age_range, y = avg_b12, fill = age_range)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", color = \"black\", alpha = 0.7) +\n  labs(title = \"Average B12 Intake by Age Group\",\n       x = \"Age Group\",\n       y = \"Average B12 Intake\") +\n  theme_minimal()"
  },
  {
    "objectID": "preprocesseddata.html#yellow-submarines-project-proposal-on-wits-data",
    "href": "preprocesseddata.html#yellow-submarines-project-proposal-on-wits-data",
    "title": "2  Prepocessed Data",
    "section": "2.1 Yellow Submarine’s Project Proposal on WITS data",
    "text": "2.1 Yellow Submarine’s Project Proposal on WITS data\nThe choice of this domain stems from the significance of Turkey’s role in the global trade landscape between 2002-2020. Before settling on the WITS database, we reviewed existing solutions, including the Harvard University Atlas project and Visualizations from the Observatory of Economic Complexity.)\nWe have decided on this database considering the primary sources that include: a. Trade Partnerships: Utilize international trade databases to identify Turkey’s major trade partners, assess trade volumes, and analyze the composition of exports and imports. b. Complexity Score: Apply complexity indices to measure the sophistication of Turkey’s exports and imports, shedding light on the diversification and technological intensity of its trade activities. c. Current Account Projections: Examine historical current account data and employ forecasting models to project future trends, allowing for informed insights into Turkey’s economic stability. d. Trading Routes: Analyze shipping and logistics data to map out key trading routes, highlighting the connectivity and strategic importance of Turkey in global trade. e. Additional Insights: Explore supplementary datasets as needed to uncover specific aspects of Turkey’s trade dynamics, such as sector-specific analyses or the impact of geopolitical events.\nWith this project, we aim to produce a comprehensive report that synthesizes the findings into a coherent narrative. Visualizations, charts, and infographics will be employed to enhance the accessibility of the data."
  },
  {
    "objectID": "preprocesseddata.html#dataset-installation-and-preprocessing",
    "href": "preprocesseddata.html#dataset-installation-and-preprocessing",
    "title": "2  Prepocessed Data",
    "section": "2.2 Dataset Installation and Preprocessing",
    "text": "2.2 Dataset Installation and Preprocessing\n\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(tradestatistics)\nlibrary(tibble)\n\n\nwits_turkey_data_only &lt;- ots_create_tidy_data(\n  years = 2002:2020,\n  reporters = \"tur\",\n  table = \"yrc\"\n)\nhead(wits_turkey_data_only)\n\nwits_turkey_data_with_partners &lt;- ots_create_tidy_data(\n  years = 2002:2020,\n  reporters = \"tur\",\n  table = \"yrpc\"\n)\nhead(wits_turkey_data_with_partners)\n\n\n# Combine the datasets into a list\ncombined_datasets &lt;- list(\n  wits_turkey_data_only = wits_turkey_data_only,\n  wits_turkey_data_with_partners = wits_turkey_data_with_partners\n)"
  },
  {
    "objectID": "preprocesseddata.html#creating-rds-file",
    "href": "preprocesseddata.html#creating-rds-file",
    "title": "2  Prepocessed Data",
    "section": "2.3 Creating RDS file",
    "text": "2.3 Creating RDS file\n\nsaveRDS(combined_datasets, file = \"wits_data.rds\")\n\nRDS Link"
  },
  {
    "objectID": "preprocesseddata.html#monitoring-the-data",
    "href": "preprocesseddata.html#monitoring-the-data",
    "title": "2  Prepocessed Data",
    "section": "2.4 Monitoring the Data",
    "text": "2.4 Monitoring the Data\n\nlibrary(DT)\n\nWarning: package 'DT' was built under R version 4.3.2\n\nloaded_datasets &lt;- readRDS(\"wits_data.rds\")\nread_wits_turkey_data_only &lt;- loaded_datasets$wits_turkey_data_only\nread_wits_turkey_data_with_partners &lt;- loaded_datasets$wits_turkey_data_with_partners\n\nDT::datatable(head(read_wits_turkey_data_only), editable = list(\n  target = 'row', disable = list(columns = c(1, 3, 4))\n))\n\n\n\n\n\nDT::datatable(head(read_wits_turkey_data_with_partners), editable = list(\n  target = 'row', disable = list(columns = c(1, 3, 4))\n))"
  },
  {
    "objectID": "exploratorydataanalysis.html#introduction-exploratory-data-analysis-on-wits-data",
    "href": "exploratorydataanalysis.html#introduction-exploratory-data-analysis-on-wits-data",
    "title": "3  Exploratory Data Analysis",
    "section": "3.1 Introduction: Exploratory Data Analysis on WITS data",
    "text": "3.1 Introduction: Exploratory Data Analysis on WITS data\nWorld Integrated Trade Solution (WITS) emerges as a pivotal platform, offering a comprehensive view of international trade dynamics, with a particular focus on Turkey from 2002 to 2020. This powerful tool aggregates data from diverse sources to furnish users with valuable insights into Turkey’s merchandise trade, tariffs, and non-tariff measures during this specific period. With an expansive database, WITS facilitates informed decision-making and strategic planning for researchers, policymakers, and businesses interested in Turkey’s trade landscape.\nEmbarking on an Exploratory Data Analysis (EDA) journey within WITS involves loading datasets, cleaning data, and employing statistical and visual analyses specific to Turkey’s trade from 2002 to 2020. This process unveils trade patterns, identifies trends, and provides actionable insights, enabling stakeholders to navigate the complexities of Turkey’s trade dynamics during this crucial timeframe. The synergy between WITS and EDA empowers users to make informed decisions and strategic choices, fostering a more interconnected and informed landscape for Turkey’s economy and trade."
  },
  {
    "objectID": "exploratorydataanalysis.html#step-1-load-required-libraries",
    "href": "exploratorydataanalysis.html#step-1-load-required-libraries",
    "title": "3  Exploratory Data Analysis",
    "section": "3.2 Step 1: Load Required Libraries",
    "text": "3.2 Step 1: Load Required Libraries\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(RColorBrewer)\nlibrary(ggridges)\n\nWarning: package 'ggridges' was built under R version 4.3.2\n\n\nDescription: Loading necessary libraries provides access to functions and tools that simplify data manipulation and visualization. dplyr is helpful for data wrangling, and ggplot2 is excellent for creating informative and visually appealing plots."
  },
  {
    "objectID": "exploratorydataanalysis.html#step-2-load-datasets",
    "href": "exploratorydataanalysis.html#step-2-load-datasets",
    "title": "3  Exploratory Data Analysis",
    "section": "3.3 Step 2: Load Datasets",
    "text": "3.3 Step 2: Load Datasets\n\n# Load the datasets\nloaded_datasets &lt;- readRDS(\"wits_data.rds\")\nread_wits_turkey_data_only &lt;- loaded_datasets$wits_turkey_data_only\nread_wits_turkey_data_with_partners &lt;- loaded_datasets$wits_turkey_data_with_partners\n\nDescription: Loading datasets is the initial step in any data analysis. It allows us to bring in the data that we’ll be working with throughout the analysis."
  },
  {
    "objectID": "exploratorydataanalysis.html#step-3-overview-of-the-datasets",
    "href": "exploratorydataanalysis.html#step-3-overview-of-the-datasets",
    "title": "3  Exploratory Data Analysis",
    "section": "3.4 Step 3: Overview of the Datasets",
    "text": "3.4 Step 3: Overview of the Datasets\n\nstr(read_wits_turkey_data_only)\n\nClasses 'data.table' and 'data.frame':  90663 obs. of  9 variables:\n $ year               : int  2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 ...\n $ reporter_iso       : chr  \"tur\" \"tur\" \"tur\" \"tur\" ...\n $ reporter_name      : chr  \"Turkey\" \"Turkey\" \"Turkey\" \"Turkey\" ...\n $ commodity_code     : chr  \"010121\" \"010121\" \"010121\" \"010121\" ...\n $ commodity_name     : chr  \"Horses; live, pure-bred breeding animals\" \"Horses; live, pure-bred breeding animals\" \"Horses; live, pure-bred breeding animals\" \"Horses; live, pure-bred breeding animals\" ...\n $ section_code       : chr  \"01\" \"01\" \"01\" \"01\" ...\n $ section_name       : chr  \"Live animals and animal products\" \"Live animals and animal products\" \"Live animals and animal products\" \"Live animals and animal products\" ...\n $ trade_value_usd_imp: num  6307262 1231248 958946 1111437 3684454 ...\n $ trade_value_usd_exp: num  0 136000 0 22750 403711 ...\n - attr(*, \".internal.selfref\")=&lt;externalptr&gt; \n - attr(*, \"sorted\")= chr [1:2] \"commodity_code\" \"section_code\"\n\nsummary(read_wits_turkey_data_only)\n\n      year      reporter_iso       reporter_name      commodity_code    \n Min.   :2002   Length:90663       Length:90663       Length:90663      \n 1st Qu.:2006   Class :character   Class :character   Class :character  \n Median :2011   Mode  :character   Mode  :character   Mode  :character  \n Mean   :2011                                                           \n 3rd Qu.:2016                                                           \n Max.   :2020                                                           \n commodity_name     section_code       section_name       trade_value_usd_imp\n Length:90663       Length:90663       Length:90663       Min.   :0.000e+00  \n Class :character   Class :character   Class :character   1st Qu.:4.259e+05  \n Mode  :character   Mode  :character   Mode  :character   Median :3.138e+06  \n                                                          Mean   :3.836e+07  \n                                                          3rd Qu.:1.574e+07  \n                                                          Max.   :4.073e+10  \n trade_value_usd_exp\n Min.   :0.000e+00  \n 1st Qu.:9.152e+04  \n Median :1.150e+06  \n Mean   :2.612e+07  \n 3rd Qu.:8.788e+06  \n Max.   :1.334e+10  \n\nstr(read_wits_turkey_data_with_partners)\n\nClasses 'data.table' and 'data.frame':  3887005 obs. of  11 variables:\n $ year               : int  2018 2019 2018 2005 2008 2002 2003 2004 2005 2006 ...\n $ reporter_iso       : chr  \"tur\" \"tur\" \"tur\" \"tur\" ...\n $ reporter_name      : chr  \"Turkey\" \"Turkey\" \"Turkey\" \"Turkey\" ...\n $ partner_iso        : chr  \"arg\" \"aus\" \"aut\" \"aze\" ...\n $ partner_name       : chr  \"Argentina\" \"Australia\" \"Austria\" \"Azerbaijan\" ...\n $ commodity_code     : chr  \"010121\" \"010121\" \"010121\" \"010121\" ...\n $ commodity_name     : chr  \"Horses; live, pure-bred breeding animals\" \"Horses; live, pure-bred breeding animals\" \"Horses; live, pure-bred breeding animals\" \"Horses; live, pure-bred breeding animals\" ...\n $ section_code       : chr  \"01\" \"01\" \"01\" \"01\" ...\n $ section_name       : chr  \"Live animals and animal products\" \"Live animals and animal products\" \"Live animals and animal products\" \"Live animals and animal products\" ...\n $ trade_value_usd_imp: num  14926 7757 26155 6784 0 ...\n $ trade_value_usd_exp: num  0 0 0 0 10250 ...\n - attr(*, \".internal.selfref\")=&lt;externalptr&gt; \n - attr(*, \"sorted\")= chr [1:2] \"commodity_code\" \"section_code\"\n\nsummary(read_wits_turkey_data_with_partners)\n\n      year      reporter_iso       reporter_name      partner_iso       \n Min.   :2002   Length:3887005     Length:3887005     Length:3887005    \n 1st Qu.:2008   Class :character   Class :character   Class :character  \n Median :2013   Mode  :character   Mode  :character   Mode  :character  \n Mean   :2012                                                           \n 3rd Qu.:2017                                                           \n Max.   :2020                                                           \n partner_name       commodity_code     commodity_name     section_code      \n Length:3887005     Length:3887005     Length:3887005     Length:3887005    \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n section_name       trade_value_usd_imp trade_value_usd_exp\n Length:3887005     Min.   :0.000e+00   Min.   :0.000e+00  \n Class :character   1st Qu.:0.000e+00   1st Qu.:4.230e+02  \n Mode  :character   Median :0.000e+00   Median :8.367e+03  \n                    Mean   :8.947e+05   Mean   :6.093e+05  \n                    3rd Qu.:1.157e+04   3rd Qu.:8.157e+04  \n                    Max.   :1.749e+10   Max.   :6.528e+09  \n\n\nDescription: Checking the structure and summary of the datasets provides an understanding of the variables, data types, and basic statistics. This helps identify potential issues and informs subsequent cleaning and analysis steps."
  },
  {
    "objectID": "exploratorydataanalysis.html#step-4-data-cleaning",
    "href": "exploratorydataanalysis.html#step-4-data-cleaning",
    "title": "3  Exploratory Data Analysis",
    "section": "3.5 Step 4: Data Cleaning",
    "text": "3.5 Step 4: Data Cleaning\n\nsapply(read_wits_turkey_data_only, function(x) sum(is.na(x)))\n\n               year        reporter_iso       reporter_name      commodity_code \n                  0                   0                   0                   0 \n     commodity_name        section_code        section_name trade_value_usd_imp \n                  0                   0                  19                   0 \ntrade_value_usd_exp \n                  0 \n\n# will be done\n\nDescription: Cleaning the data involves addressing missing values and outliers. It ensures that the data is reliable and ready for further analysis."
  },
  {
    "objectID": "exploratorydataanalysis.html#step-5-exploratory-data-analysis-eda",
    "href": "exploratorydataanalysis.html#step-5-exploratory-data-analysis-eda",
    "title": "3  Exploratory Data Analysis",
    "section": "3.6 Step 5: Exploratory Data Analysis (EDA)",
    "text": "3.6 Step 5: Exploratory Data Analysis (EDA)\n\n3.6.1 Analyze Exports and Imports over the Years\n\ntotal_exports &lt;- read_wits_turkey_data_only %&gt;%\n  group_by(year) %&gt;%\n  summarize(total_exports = sum(trade_value_usd_exp))\n\ntotal_imports &lt;- read_wits_turkey_data_only %&gt;%\n  group_by(year) %&gt;%\n  summarize(total_imports = sum(trade_value_usd_imp))\n\n# Visualize exports and imports over the years\nggplot() +\n  geom_line(data = total_exports, aes(x = year, y = total_exports, color = \"Exports\"), size = 1.5) +\n  geom_line(data = total_imports, aes(x = year, y = total_imports, color = \"Imports\"), size = 1.5) +\n  labs(title = \"Turkey's Exports and Imports Over the Years\", x = \"Year\", y = \"Trade Value (USD)\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\nDescription: Analyzing exports and imports over time provides insights into the trade trends of the country. Visualization helps in identifying patterns and understanding the overall trade dynamics.\n\n\n3.6.2 Analyze Trade with Specific Partners\n\ntop_partners &lt;- read_wits_turkey_data_with_partners %&gt;%\n  group_by(partner_name) %&gt;%\n  summarize(total_trade = sum(trade_value_usd_exp + trade_value_usd_imp)) %&gt;%\n  arrange(desc(total_trade)) %&gt;%\n  top_n(10)\n\nSelecting by total_trade\n\n# Get a color palette from RColorBrewer\npartner_colors &lt;- brewer.pal(length(top_partners$partner_name), \"Set3\")\n\n# Visualize top trading partners\nggplot(data = top_partners, aes(x = reorder(partner_name, -total_trade), y = total_trade, fill = partner_name)) +\n  geom_bar(stat = \"identity\", color = \"black\") +\n  labs(title = \"Top 10 Trading Partners\", x = \"Partner\", y = \"Total Trade Value (USD)\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  scale_fill_manual(values = partner_colors)+\n  theme(legend.position = \"none\")\n\n\n\n\nDescription: Analyzing trade with specific partners helps in identifying key collaborators. Visualizing the top trading partners provides a clear understanding of the major contributors to the country’s trade.\n\npartners &lt;- read_wits_turkey_data_with_partners %&gt;%\n  group_by(partner_name) %&gt;%\n  summarize(total_trade = sum(trade_value_usd_exp + trade_value_usd_imp)) %&gt;%\n  arrange(desc(total_trade)) %&gt;%\n  top_n(10)\n\nSelecting by total_trade\n\ntop_partners &lt;- read_wits_turkey_data_with_partners %&gt;%\n  filter(partner_name %in% partners$partner_name) %&gt;%\n  group_by(partner_name) %&gt;%\n  summarize(total_export = sum(trade_value_usd_exp),\n            total_import = sum(trade_value_usd_imp)) %&gt;%\n  arrange(desc(total_export + total_import)) %&gt;%\n  top_n(10)\n\nSelecting by total_import\n\n# Get a color palette from RColorBrewer\npartner_colors &lt;- brewer.pal(n = length(top_partners$partner_name) * 2, name = \"Paired\")\n\nWarning in brewer.pal(n = length(top_partners$partner_name) * 2, name = \"Paired\"): n too large, allowed maximum for palette Paired is 12\nReturning the palette you asked for with that many colors\n\n# Visualize import and export relations with top trading partners\nggplot(data = top_partners, aes(x = reorder(partner_name, -total_export - total_import))) +\n  geom_bar(aes(y = total_export, fill = \"Export\"), stat = \"identity\", position = \"dodge\", color = \"black\") +\n  geom_bar(aes(y = -total_import, fill = \"Import\"), stat = \"identity\", position = \"dodge\", color = \"black\") +\n  labs(title = \"Import and Export Relations with Top 10 Trading Partners\", x = \"Partner\", y = \"Total Trade Value (USD)\") +\n  scale_fill_manual(values = c(\"Export\" = partner_colors[1], \"Import\" = partner_colors[2]), name = \"\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1),\n        legend.position = \"top\")\n\n\n\n\nDescription: This bar plot illustrates the import and export relations between Turkey and its top 10 trading partners. Positive bars represent export values, while negative bars indicate import values. Each bar corresponds to a specific partner, and distinct colors differentiate between export and import transactions. The plot offers a concise overview of Turkey’s trade dynamics with its key partners, emphasizing the balance of trade and highlighting significant trading relationships.\n\n\n3.6.3 Diversity of Exported Products\n\nexport_plot_data &lt;- read_wits_turkey_data_only %&gt;%\n  group_by(section_name) %&gt;%\n  summarize(total_export = sum(trade_value_usd_exp)) %&gt;%\n  top_n(10)\n\nSelecting by total_export\n\n# Truncate section names to the first 20 characters\nexport_plot_data$truncated_name &lt;- str_trunc(export_plot_data$section_name, 50)\n\n# Get distinct truncated names for colors\ncolor_names &lt;- unique(export_plot_data$truncated_name)\n\n# Generate a limited number of distinct colors\ncolors &lt;- brewer.pal(length(color_names), \"Set3\")\n\nggplot(data = export_plot_data, aes(x = reorder(section_name, -total_export), y = total_export, fill = truncated_name)) +\n  geom_bar(stat = \"identity\", color = \"black\") +\n  labs(title = \"Top 10 Diversity of Exported Products (2002-2020, Turkey)\", x = \"Products\", y = \"Total Export Value (USD)\") +\n  theme(axis.text.x = element_blank(), axis.title.x = element_blank(), legend.position = \"bottom\") +\n  guides(fill = guide_legend(nrow = 5)) +\n  scale_fill_manual(values = setNames(colors, color_names), name = \"\")\n\n\n\n\nDescription:The “Diversity of Exported Products” graphic provides insights into Turkey’s international trade from 2002 to 2020. It showcases the top 10 product categories that Turkey has predominantly exported over the years. Each product category is represented by a distinct color, offering a visual representation of the diversity and distribution of exported goods. The vertical bars display the total export values in USD for each product category, providing a clear overview of Turkey’s major export sectors. The graphic aids in identifying trends, patterns, and the relative significance of various product categories in Turkey’s export landscape.\n\nimported_plot_data &lt;- read_wits_turkey_data_only %&gt;%\n  group_by(section_name) %&gt;%\n  summarize(total_import = sum(trade_value_usd_imp)) %&gt;%\n  top_n(10)\n\nSelecting by total_import\n\n# Truncate section names to the first 20 characters\nimported_plot_data$truncated_name &lt;- str_trunc(imported_plot_data$section_name, 50)\n\n# Get distinct truncated names for colors\ncolor_names &lt;- unique(imported_plot_data$truncated_name)\n\n# Generate a limited number of distinct colors\ncolors &lt;- brewer.pal(length(color_names), \"Set3\")\n\nggplot(data = imported_plot_data, aes(x = reorder(section_name, -total_import), y = total_import, fill = truncated_name)) +\n  geom_bar(stat = \"identity\", color = \"black\") +\n  labs(title = \"Top 10 Diversity of Imported Products (2002-2020, Turkey)\", x = \"Products\", y = \"Total Import Value (USD)\") +\n  theme(axis.text.x = element_blank(), axis.title.x = element_blank(), legend.position = \"bottom\") +\n  guides(fill = guide_legend(nrow = 5)) +\n  scale_fill_manual(values = setNames(colors, color_names), name = \"\")\n\n\n\n\nDescription: The “Diversity of Imported Products” graphic illustrates the diversity of products that Turkey has imported from other countries between 2002 and 2020. Similar to the exported products graphic, this visualization highlights the top 10 imported product categories. Each category is uniquely colored for easy identification. The vertical bars display the total import values in USD for each product category, offering insights into the composition of Turkey’s imports. This graphic assists in understanding the import dynamics, identifying significant product categories, and discerning patterns in Turkey’s international trade relationships.\nTogether, these graphics provide a comprehensive view of Turkey’s trade dynamics, showcasing both the diversity of exported and imported products over the years.\n\n\n3.6.4 Analyze Process\n\ntop_export_products &lt;- read_wits_turkey_data_only %&gt;%\n  group_by(section_name) %&gt;%\n  summarize(total_export = sum(trade_value_usd_exp)) %&gt;%\n  top_n(10)\n\nSelecting by total_export\n\n# Filter the data with the selected top export products\nexport_plot_data &lt;- read_wits_turkey_data_with_partners %&gt;%\n  filter(section_name %in% top_export_products$section_name) %&gt;%\n  group_by(year, section_name) %&gt;%\n  summarize(total_export = sum(trade_value_usd_exp))\n\n`summarise()` has grouped output by 'year'. You can override using the\n`.groups` argument.\n\n# Filter the data based on the top export products\nfiltered_export_data &lt;- export_plot_data %&gt;%\n  filter(section_name %in% top_export_products$section_name)\n\n# Truncate section names to the first 20 characters\nfiltered_export_data$truncated_name &lt;- str_trunc(filtered_export_data$section_name, 50)\n\n# Get distinct truncated names for colors\ncolor_names &lt;- unique(filtered_export_data$truncated_name)\n\n# Generate a limited number of distinct colors\ncolors &lt;- brewer.pal(length(color_names), \"Set3\")\n\n# Create the plot with geom_point\nggplot(data = filtered_export_data, aes(x = year, y = total_export, color = truncated_name)) +\n  geom_line(size = 1.2, alpha = 0.7) +\n  labs(title = \"Export Trends of Top 10 Products (2002-2020, Turkey)\", x = \"Year\", y = \"Total Export Value (USD)\") +\n  theme(legend.position = \"bottom\") +\n  guides(color = guide_legend(nrow = 5)) +\n  scale_color_manual(values = setNames(colors, color_names), name = \"\")\n\n\n\n\nDescription: Explore the export trends of Turkey’s top 10 product categories from 2002 to 2020. Each line represents a product category, showcasing the variation in total export values over the years. The colors distinguish different product categories, providing a visual overview of their respective export dynamics.\n\ntop_import_products &lt;- read_wits_turkey_data_only %&gt;%\n  group_by(section_name) %&gt;%\n  summarize(total_import = sum(trade_value_usd_imp)) %&gt;%\n  top_n(10)\n\nSelecting by total_import\n\n# Filter the data with the selected top import products\nimport_plot_data &lt;- read_wits_turkey_data_with_partners %&gt;%\n  filter(section_name %in% top_import_products$section_name) %&gt;%\n  group_by(year, section_name) %&gt;%\n  summarize(total_import = sum(trade_value_usd_imp))\n\n`summarise()` has grouped output by 'year'. You can override using the\n`.groups` argument.\n\n# Filter the data based on the top import products\nfiltered_import_data &lt;- import_plot_data %&gt;%\n  filter(section_name %in% top_import_products$section_name)\n\n# Truncate section names to the first 20 characters\nfiltered_import_data$truncated_name &lt;- str_trunc(filtered_import_data$section_name, 50)\n\n# Get distinct truncated names for colors\ncolor_names &lt;- unique(filtered_import_data$truncated_name)\n\n# Generate a limited number of distinct colors\ncolors &lt;- brewer.pal(length(color_names), \"Set3\")\n\n# Create the plot with geom_point\nggplot(data = filtered_import_data, aes(x = year, y = total_import, color = truncated_name)) +\n  geom_line(size = 1.2, alpha = 0.7) +\n  labs(title = \"Import Trends of Top 10 Products (2002-2020, Turkey)\", x = \"Year\", y = \"Total Import Value (USD)\") +\n  theme(legend.position = \"bottom\") +\n  guides(color = guide_legend(nrow = 5)) +\n  scale_color_manual(values = setNames(colors, color_names), name = \"\")\n\n\n\n\nDescription: Explore the import trends of Turkey’s top 10 product categories from 2002 to 2020. Each line represents a product category, showcasing the variation in total import values over the years. The colors distinguish different product categories, providing a visual overview of their respective import dynamics."
  },
  {
    "objectID": "exploratorydataanalysis.html#step-6-interpretation-and-conclusions",
    "href": "exploratorydataanalysis.html#step-6-interpretation-and-conclusions",
    "title": "3  Exploratory Data Analysis",
    "section": "3.7 Step 6: Interpretation and Conclusions",
    "text": "3.7 Step 6: Interpretation and Conclusions\nDescription: In this final step, interpretations and conclusions are drawn based on the analysis. It’s an opportunity to provide insights into the data, make recommendations, and outline potential next steps for further final report and presantation."
  }
]